{"version":3,"sources":["ContactList/ContactList.module.css","ThemeContext/ThemeContext.jsx","ContactForm/ContactForm.jsx","ListItem/ListItem.jsx","ContactList/ContactList.jsx","Filter/Filter.jsx","App.js","hoc/withTheme.js","index.js","ContactForm/ContactForm.module.css","ListItem/ListItem.module.css","Filter/Filter.module.css"],"names":["module","exports","themeConfig","light","fontColor","bodybg","changeTo","dark","ThemeContext","React","createContext","ContactForm","state","name","number","handleChange","e","target","value","setState","onSubmit","preventDefault","props","bind","this","id","className","styles","form","type","input","onChange","required","button","Component","ListItem","onRemove","listItem","key","onClick","ContactList","contacts","contactList","map","contact","Filter","onChangeFilter","container","htmlFor","uuidv1","require","App","filter","some","alert","changeFilter","getVisibleContacts","toLowerCase","includes","removeContact","prevState","persistedContacts","localStorage","getItem","JSON","parse","prevProps","setItem","stringify","visibleContacts","toggleTheme","Consumer","theme","style","background","color","checked","event","currentTarget","length","PropTypes","func","isRequired","Theme","newTheme","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b5d811b7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__3TRpB\"};","import React from 'react';\n\nexport const themeConfig = {\n    light: {\n        fontColor: 'black',\n        bodybg: 'white',\n        changeTo: 'dark',\n    },\n    dark: {\n        fontColor: 'white',\n        bodybg: 'black',\n        changeTo: 'light',\n    }\n};\n\nconst ThemeContext = React.createContext(themeConfig.light);\nexport default ThemeContext;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n    static propTypes = {\n        onSubmit: PropTypes.func.isRequired,\n    }\n\n    state = {\n        name: '',\n        number: '',\n    };\n\n    handleChange = (e) => {\n        const { name, value } = e.target;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    onSubmit = (e) => {\n        const { name, number } = this.state;\n        e.preventDefault();\n        this.props.onSubmit(name, number);\n        this.setState({ name: '', number: '' });\n    }\n\n    handleChange = this.handleChange.bind(this);\n\n    render() {\n        const { name, number } = this.state;\n        return <form id=\"form\" className={styles.form} onSubmit={this.onSubmit}>\n            <label> Name\n                <input type=\"text\" name=\"name\" value={name} className={styles.input} onChange={this.handleChange} required />\n            </label>\n            <label> Number\n                <input type=\"tel\" name=\"number\" value={number} className={styles.input} onChange={this.handleChange} required />\n            </label>\n            <button form=\"form\" type=\"submit\" className={styles.button} >Add contact</button>\n        </form>\n    };\n};\n\nexport default ContactForm;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ListItem.module.css';\n\nexport default function ListItem({ id, name, number, onRemove }) {\n    return (\n        <li className={styles.listItem} key={id}>\n            {name} : {number}\n            <button type=\"button\" className={styles.button} onClick={() => onRemove(id)}>Delete</button>\n        </li>\n    )\n};\n\n\nListItem.propTypes = {\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\nimport ListItem from '../ListItem/ListItem';\n\nexport default function ContactList({ contacts, onRemove }) {\n    return (\n        <ul className={styles.contactList} >\n            {contacts.map(contact => (\n                <ListItem key={contact.id} id={contact.id} name={contact.name} number={contact.number} onRemove={onRemove} />\n            ))\n            }\n        </ul>\n    )\n};\n\nContactList.propTypes = {\n    contacts: PropTypes.array.isRequired,\n    onRemove: PropTypes.func.isRequired,\n};\n\n","import React from 'react';\nimport styles from './Filter.module.css';\nimport PropTypes from 'prop-types';\nimport uuidv1 from 'uuid/v1';\n\nexport default function Filter({ value, onChangeFilter }) {\n    return (\n        <div className={styles.container}>\n            <label htmlFor=\"filter\">Find contacts by name</label>\n            <input\n                id={uuidv1()}\n                type=\"text\"\n                name=\"filter\"\n                value={value}\n                className={styles.input}\n                onChange={e => onChangeFilter(e.target.value)}\n            />\n        </div>\n    );\n};\n\nFilter.propTypes = {\n    value: PropTypes.string.isRequired,\n    onChangeFilter: PropTypes.func.isRequired,\n};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ContactForm from './ContactForm/ContactForm';\nimport ContactList from './ContactList/ContactList';\nimport Filter from './Filter/Filter';\nimport ThemeContext from './ThemeContext/ThemeContext';\n\nconst uuidv1 = require('uuid/v1');\n\nclass App extends Component {\n  static get propTypes() {\n    return {\n      toggleTheme: PropTypes.func.isRequired,\n    };\n  }\n\n  state = {\n    contacts: [\n      // { name: 'Rosie Simpson', number: '4591256', id: 'id-1' },\n      // { name: 'Hermione Kline', number: '4438912', id: 'id-2' },\n      // { name: 'Eden Clements', number: '6451779', id: 'id-3' },\n      // { name: 'Annie Copeland', number: '2279126', id: 'id-4' },\n    ],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const persistedContacts = localStorage.getItem('contacts');\n\n    if (persistedContacts) {\n      this.setState({\n        contacts: JSON.parse(persistedContacts),\n      });\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (prevState.contacts !== contacts) {\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n    }\n  }\n\n  onSubmit = (name, number) => {\n    if (this.state.contacts.some(contact => contact.number === number)) {\n      alert(`${name} is already in contacts!`);\n    } else {\n      this.setState(({ contacts }) => ({\n        contacts: [\n          ...contacts,\n          {\n            name,\n            number,\n            id: uuidv1(),\n          },\n        ],\n      }));\n    }\n  };\n\n  changeFilter = filter => {\n    this.setState({ filter });\n  };\n\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  removeContact = id => {\n    this.setState(prevState => {\n      return {\n        contacts: prevState.contacts.filter(contact => contact.id !== id),\n      };\n    });\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    const { toggleTheme } = this.props;\n\n    return (\n      <ThemeContext.Consumer>\n        {theme => (\n          <div\n            className=\"body\"\n            style={{ background: theme.bodybg, color: theme.fontColor }}\n          >\n            <div className=\"theme-selector\">\n              <label htmlFor=\"theme\" className=\"switch\">\n                <input\n                  type=\"checkbox\"\n                  id=\"theme\"\n                  checked={theme.type === 'light'}\n                  onChange={event => toggleTheme(event.currentTarget.value)}\n                />\n                <span className=\"slider round\">\n                  Change to {theme.changeTo} theme\n                </span>\n              </label>\n            </div>\n            <h1>Phonebook</h1>\n            <ContactForm onSubmit={this.onSubmit} />\n            <h2>Contacts</h2>\n            {contacts.length > 1 && (\n              <Filter value={filter} onChangeFilter={this.changeFilter} />\n            )}\n            <ContactList\n              contacts={filter.length === 0 ? contacts : visibleContacts}\n              onRemove={this.removeContact}\n            />\n          </div>\n        )}\n      </ThemeContext.Consumer>\n    );\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react';\nimport ThemeContext, { themeConfig } from '../ThemeContext/ThemeContext';\nimport App from '../App';\n\nclass Theme extends Component {\n  constructor() {\n    super();\n    this.state = {\n      theme: 'light',\n    };\n    this.toggleTheme = this.toggleTheme.bind(this);\n  }\n\n  toggleTheme(newTheme) {\n    const { theme } = this.state;\n    this.setState(() => {\n      return { theme: theme === 'dark' ? 'light' : 'dark' };\n    });\n  }\n\n  render() {\n    const { theme } = this.state;\n    return (\n      <ThemeContext.Provider value={themeConfig[theme]}>\n        <App toggleTheme={this.toggleTheme} />\n      </ThemeContext.Provider>\n    );\n  }\n}\n\nexport default Theme;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Theme from './hoc/withTheme';\n\nReactDOM.render(<Theme />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__30sDI\",\"input\":\"ContactForm_input__21VKQ\",\"button\":\"ContactForm_button__15jbv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ListItem_listItem__2KRmq\",\"button\":\"ListItem_button__3eHig\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__VE-pk\",\"input\":\"Filter_input__QAhIr\"};"],"sourceRoot":""}